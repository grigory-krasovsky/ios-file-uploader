name: Deploy to VPS

on:
  push:
    branches: [master]

env:
  VPS_IP: ${{ secrets.VPS_IP }}
  VPS_USER: ${{ secrets.VPS_USER }}
  # Define your project name as a variable here
  PROJECT_NAME: "ios-file-uploader"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Docker steps
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push
        run: |
          docker build -t iceteagreen/$PROJECT_NAME:${{ github.run_id }} -t iceteagreen/$PROJECT_NAME:latest .
          docker push iceteagreen/$PROJECT_NAME:latest

      # Deployment
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $VPS_IP >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Transfer Compose File
        run: |
          ssh -T $VPS_USER@$VPS_IP "mkdir -p /home/$PROJECT_NAME"
          scp -o StrictHostKeyChecking=no \
              docker-compose.prod.yml \
              $VPS_USER@$VPS_IP:/home/$PROJECT_NAME/

      - name: Deploy
        run: |
          ssh -T $VPS_USER@$VPS_IP <<EOF
          docker pull iceteagreen/$PROJECT_NAME:latest
          cd /home/$PROJECT_NAME
          docker compose -f docker-compose.prod.yml down
          docker compose -f docker-compose.prod.yml up -d --force-recreate
          EOF